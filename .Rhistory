library(openxlsx)
library(httr)
cpi_excel_url <- 'https://www.ons.gov.uk/file?uri=/economy/inflationandpriceindices/datasets/consumerpriceinflation/current/consumerpriceinflationdetailedreferencetables.xls'
get_msg <- httr::GET(cpi_excel_url, write_disk(cpi_excel <- tempfile(fileext = ".xls")))
# `excel_sheets()` will tell us what the names of the sheets are
readxl::excel_sheets(cpi_excel)
# Here we use the "sheet=" argument to read specific sheets:
cpi_table13 <- readxl::read_excel(cpi_excel, sheet = "Table 13")
cpi_table15 <- readxl::read_excel(cpi_excel, sheet = "Table 15")
# Note the blank lines at the top of the table. The actual data table does not
# "start" until row 6, which contains the actual column names.
head(cpi_table13)
# Note that column names in the R object have just been inferred, and are not
# very useful:
names(cpi_table13)
# You can have a look at individual columns to see that while these really
# should all be numbers, because of the layout of the Excel file, some contain
# words, which means the data gets interpreted as text. The following prints out
# the first ten (1:10) values of column 4:
cpi_table13[1:10,4]
# Using str() allows you to see which columns have been interpreted as what kind
# of value. Note all columns have been interpreted as character strings (chr):
str(cpi_table13)
cpi_table13 <- readxl::read_excel(cpi_excel, sheet = "Table 13", skip = 6)
head(cpi_table13)
str(cpi_table13)
names(cpi_table13)
cpi_table18a <- readxl::read_excel(cpi_excel, sheet = "18a, 18b", range = "B6:O24")
cpi_table18b <- readxl::read_excel(cpi_excel, sheet = "18a, 18b", range = "B30:O47")
head(cpi_table18a)
head(cpi_table18b)
str(cpi_table18a)
str(cpi_table18b)
# There are several ways you could have got the sheets you needed.
# 1. Reading the specific sheet using the `sheet =` arguments in `readxl::read_excel`
cpi_table13 <- readxl::read_excel(cpi_excel, sheet = "Table 13")
cpi_table15 <- readxl::read_excel(cpi_excel, sheet = "Table 15")
# 2. Finding the correct dataframe in your list of dataframes made earlier
cpi_table13 <- cpi_df[14]
cpi_table18a
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(openxlsx)
library(httr)
htmltools::img(src = knitr::image_uri("./Images/LATree.PNG"),
alt = 'logo',
style = 'position:absolute; top:0; right:0; padding:10px; width:200px;')
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(openxlsx)
library(httr)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(openxlsx)
library(httr)
cpi_excel_url <- 'https://www.ons.gov.uk/file?uri=/economy/inflationandpriceindices/datasets/consumerpriceinflation/current/consumerpriceinflationdetailedreferencetables.xls'
get_msg <- httr::GET(cpi_excel_url, write_disk(cpi_excel <- tempfile(fileext = ".xls")))
cpi_excel <- "C:/Downloads/myfile.xls"
cpi_excel_url <- 'https://www.ons.gov.uk/file?uri=/economy/inflationandpriceindices/datasets/consumerpriceinflation/current/consumerpriceinflationdetailedreferencetables.xls'
get_msg <- httr::GET(cpi_excel_url, write_disk(cpi_excel <- tempfile(fileext = ".xls")))
cpi_excel <- "C:/Downloads/myfile.xls"
# `excel_sheets()` will tell us what the names of the sheets are
readxl::excel_sheets(cpi_excel)
# Here we use the "sheet=" argument to read specific sheets:
cpi_table13 <- readxl::read_excel(cpi_excel, sheet = "Table 13")
# Note the blank lines at the top of the table. The actual data table does not
# "start" until row 6, which contains the actual column names.
head(cpi_table13)
cpi_excel_url <- 'https://www.ons.gov.uk/file?uri=/economy/inflationandpriceindices/datasets/consumerpriceinflation/current/consumerpriceinflationdetailedreferencetables.xls'
get_msg <- httr::GET(cpi_excel_url, write_disk(cpi_excel <- tempfile(fileext = ".xls")))
# `excel_sheets()` will tell us what the names of the sheets are
readxl::excel_sheets(cpi_excel)
# Here we use the "sheet=" argument to read specific sheets:
cpi_table13 <- readxl::read_excel(cpi_excel, sheet = "Table 13")
cpi_table15 <- readxl::read_excel(cpi_excel, sheet = "Table 15")
# Note the blank lines at the top of the table. The actual data table does not
# "start" until row 6, which contains the actual column names.
head(cpi_table13)
# Note that column names in the R object have just been inferred, and are not
# very useful:
names(cpi_table13)
# You can have a look at individual columns to see that while these really
# should all be numbers, because of the layout of the Excel file, some contain
# words, which means the data gets interpreted as text. The following prints out
# the first ten (1:10) values of column 4:
cpi_table13[1:10,4]
# Using str() allows you to see which columns have been interpreted as what kind
# of value. Note all columns have been interpreted as character strings (chr):
str(cpi_table13)
cpi_table13 <- readxl::read_excel(cpi_excel, sheet = "Table 13", skip = 6)
head(cpi_table13)
str(cpi_table13)
names(cpi_table13)
cpi_table13
names(cpi_table13)
str(cpi_table13)
cpi_table13[,1]
cpi_table13[,2]
cpi_table13[,3]
cpi_table13[1:10,3]
head(cpi_table13)
as.data.frame(cpi_table13)
head(as.data.frame(cpi_table13))
cpi_table13_headers <- readxl::read_excel(cpi_excel, sheet = "Table 13", range = "D6:Q24")
cpi_table13_headers <- readxl::read_excel(cpi_excel,
sheet = "Table 13",
range = "D6:Q24",
col_names = FALSE
)
cpi_table13_headers
cpi_table13_headers <- readxl::read_excel(cpi_excel,
sheet = "Table 13",
range = "D6:Q7",
col_names = FALSE
)
cpi_table13_headers
col_months <- cpi_table13_headers[2,]
col_years <- cpi_table13_headers[1,]
col_months
col_years
new_col_names <_ paste(col_months, col_years)
new_col_names <- paste(col_months, col_years)
new_col_names
cpi_table13_headers <- readxl::read_excel(cpi_excel,
sheet = "Table 13",
range = "D6:Q7",
col_names = FALSE,
na = " "
)
cpi_table13_headers
new_col_names <- paste(col_months, col_years)
new_col_names
new_col_names <- c("code","category",new_col_names)
new_col_names
names(cpi_table13) <- new_col_names
head(cpi_table13)
?GET
httr_options()
# Write a new excel file with two sheets
openxlsx::write.xlsx(cpi_table13, './Data/my_table_13.xlsx')
# Write a new excel file with two sheets
openxlsx::write.xlsx(cpi_table13, '../Data/my_table_13.xlsx')
# Write a new excel file with two sheets
dataset_names <- list('Sheet1' = cpi_table18a, 'Sheet2' = cpi_table18b)
cpi_table18a <- readxl::read_excel(cpi_excel, sheet = "18a, 18b", range = "B6:O24")
cpi_table18b <- readxl::read_excel(cpi_excel, sheet = "18a, 18b", range = "B30:O47")
head(cpi_table18a)
head(cpi_table18b)
str(cpi_table18a)
str(cpi_table18b)
# Write a new excel file with two sheets
dataset_names <- list('Sheet1' = cpi_table18a, 'Sheet2' = cpi_table18b)
openxlsx::write.xlsx(dataset_names, '../Data/my_tables18.xlsx')
library(readxl)
getwd()
list.files("../Data")
list.files()
list.files("Data")
cpi_indices <- read.xlsx("Data/CPI indices example.xlsx")
library(openxlsx)
cpi_indices <- read.xlsx("Data/CPI indices example.xlsx")
cpi_codes <- read.xlsx("Data/CPI codes and names.xlsx")
head(cpi_indices)
head(cpi_codes)
str(cpi_codes)
str(cpi_indices)
glimpse(cpi_indices)
dplyr::glimpse(cpi_indices)
names(cpi_indices)
cpi_indices <- read.xlsx("Data/CPI indices example.xlsx")
names(cpi_indices)
cpi_codes <- read.xlsx("Data/CPI codes and names.xlsx")
names(cpi_indices)
cpi_codes <- read.xlsx("Data/CPI codes and names.xlsx")
names(cpi_indices)
cpi_indices <- read.xlsx("Data/CPI indices example.xlsx")
names(cpi_indices)
?read.xlsx
cpi_indices <- read.xlsx("Data/CPI indices example.xlsx")
names(cpi_indices)
cpi_indices <- read.xlsx("Data/CPI indices example.xlsx")
cpi_codes <- read.xlsx("Data/CPI codes and names.xlsx")
names(cpi_indices)
janitor::clean_names(cpi_indices)
cpi_indices <- read.xlsx("Data/CPI indices example.xlsx")
cpi_codes <- read.xlsx("Data/CPI codes and names.xlsx")
names(cpi_indices)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
names(cpi_codes)
names(cpi_codes) <- c("code","name")
names(cpi_codes)
band_members
band_members <- dplyr::band_members
band_instruments
band_instruments <- dplyr::band_instruments
band_membership_inner_join <- dplyr::inner_join(x = band_members,
y = band_instruments,
by = "name")
band_membership_inner_join
band_membership_inner_join
band_members
band_instruments
cpi_indices <- cpi_indices %>%
left_join(cpi_codes, by =  "code") %>%
relocate("name", .after="code")
htmltools::img(src = knitr::image_uri("./Images/LATree.PNG"),
alt = 'logo',
style = 'position:absolute; top:0; right:0; padding:10px; width:200px;')
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readxl)
cpi_indices <- read_xlsx("../Data/CPI indices example.xlsx")
cpi_codes <- read_xlsx("../Data/CPI codes and names.xlsx")
head(cpi_indices)
head(cpi_codes)
str(cpi_indices)
glimpse(cpi_indices)
names(cpi_indices)
cpi_indices <- janitor::clean_names(cpi_indices)
names(cpi_indices)
names(cpi_codes)
names(cpi_codes) <- c("code","name")
names(cpi_codes)
cpi_indices <- cpi_indices %>%
left_join(cpi_codes, by =  "code") %>%
relocate("name", .after="code")
head(cpi_indices[,1:5], 10)
cpi_indices <- cpi_indices %>%
left_join(cpi_codes %>%
rename(name2=name),
by = c("short_code"="code" )) %>%
relocate(name2, .after="short_code")
head(cpi_indices[,1:5],20)
cpi_indices %>% group_by(name2) %>% mean(i2008)
cpi_indices %>% group_by(name2) %>% mean(i2008, na.rm=T)
cpi_indices %>% group_by(name2) %>% summarise(mean(i2008, na.rm=T))
test <- cpi_indices %>% group_by(name2) %>% mean(i2008, na.rm=T)
test <- cpi_indices %>% group_by(name2) %>% summarise(mean(i2008, na.rm=T))
test <- cpi_indices %>% group_by(name2) %>% summarise() %>% mean(i2008, na.rm=T)
test <- cpi_indices %>% group_by(name2) %>% mean(i2008, na.rm=T) %>% summarise()
test <- cpi_indices %>% group_by(name2) %>% summarise(mean(i2008, na.rm=T))
test
test$name2=="Food"
test[test$name2=="Food",]
cpi_indices %>% count(name21)
cpi_indices %>% count(name2)
cpi_indices %>% distinct(name2)
cpi_indices %>% count_n(name2)
cpi_indices %>% n_count(name2)
cpi_indices %>% group_by(name2)
cpi_indices
cpi_indices %>% count(name2)
cpi_indices %>% count(name2)[1:10]
(cpi_indices %>% count(name2))
(cpi_indices %>% count(name2))[1:10,]
(cpi_indices %>% count(name2))[1:20,]
head(cpi_indices
)
cpi_indices %>% group_by(shortcode) %>% count())
cpi_indices %>% group_by(shortcode) %>% count()
cpi_indices %>% count(short_code)
n_scode <- cpi_indices %>% counts = count(short_code)
n_scode <- cpi_indices %>% count(short_code)
n_scode
n_scode %>% left_join(cpi_indices, by = "short_code")
subset(cpi_indices, c("short_code", name")
)
)
subset(cpi_indices, c("short_code", name"))
filter(cpi_indices, c("short_code", "name")
)
?filter
?subset
subset(cpi_indices, select=c("short_code", name"))
names(cpi_indices)
filter(cpi_indices, "name")
select(cpi_indices, "name")
select(cpi_indices, c("code","name")
)
select(cpi_indices, c("short code","name")
)
select(cpi_indices, c("short code","name"))
select(cpi_indices, c("short)code","name"))
select(cpi_indices, c("short_code","name"))
cpi_indices
cpi_indices %>% select(short_code, name2)
cpi_indices %>% select(short_code, name2) %>% right_join(n_scode, by = short_code)
cpi_indices %>% select(short_code, name2) %>% right_join(n_scode, by = "short_code")
nrow(n_scode)
n_scode %>% left_join(select(cpi_indices, c(short_code, name2)), by = "short_code")
n_scode
n_scode %>% left_join(select(cpi_indices, c(short_code, name2)), by = "short_code")
select(cpi_indices, c(short_code, name2)
)
n_scode
n_scode %>% left_join(cpi_indices, by = "short_code")
left_join(n_scode, cpi_indices, by = "short_code")
left_join(cpi_indices,n_scode, by = "short_code")
names(n_scode)
n_scode
n_scode %>% left_join(cpi_indices["name2"], by = "short_code")
n_scode %>% left_join(cpi_indices[c("short_code","name2"], by = "short_code")
n_scode %>% left_join(cpi_indices[c("short_code","name2")], by = "short_code")
n_scode %>% right_join(cpi_indices[c("short_code","name2")], by = "short_code")
n_scode %>% inner_join(select(cpi_indices, short_code, name2), by = "short_code")
n_scode %>% outer_join(select(cpi_indices, short_code, name2), by = "short_code")
select(cpi_indices, short_code, name2)
select(cpi_indices, short_code, name2) %>% unique()
n_scode %>% left_join(cpi_indices, by = "short_code")
n_scode %>% left_join(select(cpi_indices, short_code, name2), by = "short_code")
n_scode
cpi_indices
n_scode
cpi_indices
n_scode %>% inner_join(cpi_indices, by = "short_code")
n_scode %>% inner_join(select(cpi_indices, name2, short_code), by = "short_code")
n_scode %>% inner_join(select(cpi_indices, name2, short_code) %>% unique(), by = "short_code")
n_scode %>% arrange(name2)
n_scode %>% arrange(name2)
n_scode
n_scode <- cpi_indices %>% count(short_code)
n_scode
n_scode <- n_scode %>%
inner_join(select(cpi_indices, name2, short_code) %>%
unique(),
by = "short_code")
n_scode
n_scode %>% arrange(name2)
n_scode %>% arrange(n)
n_scode %>% arrange(desc(name2))
n_scode %>% arrange(desc(n))
n_scode %>% arrange(desc(n),3)
n_scode %>% arrange(desc(n))
n_scode <- cpi_indices %>% count(short_code)
n_scode <- n_scode %>%
left_join(select(cpi_indices, name2, short_code) %>%
unique(),
by = "short_code")
n_scode %>% arrange(desc(n))
n_scode
n_scode %>% arrange(desc(n))
n_scode %>% arrange(desc(n))
cpi_indices
cpi_indices %>% left_join(n_scode, by = "short_code")
cpi_indices %>% left_join(n_scode %>% select(short_code, n), by = "short_code")
n_scode %>% arrange(desc(n))
cpi_indices %>% group_by(name2) %>% mutate(mean_2008 = mean(i2008))
cpi_indices %>% group_by(name2) %>% mutate(mean_2008 = mean(i2008)) %>% subset(short_code, name2, mean_2008)
cpi_indices %>% group_by(name2) %>% mutate(mean_2008 = mean(i2008)) %>% select(short_code, name2, mean_2008)
cpi_indices %>% group_by(name2) %>% mutate(mean_2008 = mean(i2008)) %>% select(short_code, name2, mean_2008) %>% unique()
cpi_indices %>% group_by(name2) %>% summarise(mean(i2008))
cpi_indices %>% group_by(name2) %>% mean2008 = summarise(mean(i2008))
cpi_indices %>% group_by(name2) %>% summarise(mean2008 =mean(i2008))
cpi_indices %>% group_by(name2) %>% summarise(mean2008 = mean(i2008))
cpi_indices %>% group_by(name2) %>% summarise(mean2008 = mean(i2008) %>% filter(name2 == "Books, newspapers and stationery"))
filter(cpi_indices, name2 = "Food")
filter(cpi_indices, name2 == "Food")
n_scode
filter(cpi_indices, name2 == c("Food","Non-alcoholic beverages")
filter(cpi_indices, name2 == c("Food","Non-alcoholic beverages"))
filter(cpi_indices, name2 == c("Non-alcoholic beverages"))
filter(cpi_indices, name2 %in% c("Food","Non-alcoholic beverages"))
filter(cpi_indices, name2 == "Food" | name2 == "Non-alcoholic beverages")
n_scode
n_scode[1:20,]
n_scode[1:25,]
n_scode[20:30,]
n_scode[15:30,]
n_scode[30:40,]
n_scode[30:50,]
n_scode[40:50,]
n_scode <- cpi_indices %>% count(short_code)
n_scode
n_scode
head(n_scode)
tail(n_scode)
n_scode <- n_scode %>%
left_join(select(cpi_indices, name2, short_code) %>%
unique(),
by = "short_code")
n_scode
head(n_scode()
head(n_scode)
tail(n_scode)
n_scode %>% arrange(desc(n))
n_scode
tail(n_scode)
tail(n_scode,10)
tail(n_scode,15)
n_scode[1:15]
n_scode[1:15,]
n_scode[15:30,]
n_scode[1:15,]
new_cats <- c("Food", "Non-alcoholic beverages", "Clothing", "Footwear including repairs")
new_cats
cpi_indices
cpi_indices %>% filter(name2)
cpi_indices %>% filter(name2 %in% new_cats)
selected_cats <- c("Food", "Non-alcoholic beverages", "Clothing", "Footwear including repairs")
my_subset <- cpi_indices %>% filter(name2 %in% selected_cats)
my_subset
my_subset$name2
my_subset$name2 %in% c("Food","Non-alcoholic beverages")
my_subset %>% group_by(name2)
my_subset %>% mutate(cat2 = name2 %in% c("Food","Non-alcoholic beverages"))
my_subset %>% filter(name2 %in% c("Food","Non-alcoholic beverages"))
my_subset %>% filter(name2 %in% c("Food","Non-alcoholic beverages") %>% mutate(new_cat = "All foods"))
my_subset %>% filter(name2 %in% c("Food","Non-alcoholic beverages")) %>% mutate(new_cat = "All foods"))
my_subset %>% filter(name2 %in% c("Food","Non-alcoholic beverages")) %>% mutate(new_cat = "All foods")
foods <- my_subset %>% filter(name2 %in% c("Food","Non-alcoholic beverages")) %>% mutate(new_cat = "All foods")
garments <- my_subset %>% filter(name2 %in% c("Clothing","Footwear including repairs")) %>% mutate(new_cat = "All garments")
foods
garments
merge(foods, garments)
cpi_indices %>% filter(name2 %in% c("Food","Non-alcoholic beverages"))
cpi_indices
all_foods <- cpi_indices %>% filter(name2 %in% c("Food","Non-alcoholic beverages")) %>% mutate(new_cat = "All foods")
all_foods <- cpi_indices %>% filter(name2 %in% c("Food","Non-alcoholic beverages")) %>% mutate(new_cat = "All foods")
all_garments <- cpi_indices %>% filter(name2 %in% c("Clothing","Footwear including repairs")) %>% mutate(new_cat = "All garments")
all_foods
all_garments
row_bind(all_foods, all_garments)
dplyr::row_bind(all_foods, all_garments)
bind_rows(all_foods, all_garments)
new_cats
all_foods <- cpi_indices %>%
filter(name2 %in% c("Food","Non-alcoholic beverages")) %>%
mutate(new_cat = "All foods")
all_garments <- cpi_indices %>%
filter(name2 %in% c("Clothing","Footwear including repairs")) %>%
mutate(new_cat = "All garments")
new_cats <- bind_rows(all_foods, all_garments)
new_cats
new_cats %>% select(new_cat, i2020, i2021)
new_cats %>% select(new_cat, i2020, i2021) %>% group_by(new_cat) %>% summarise(mean)
new_cats %>% select(new_cat, i2020, i2021) %>% group_by(new_cat) %>% summarise(mean())
new_cats %>% select(new_cat, i2020, i2021) %>% group_by(new_cat) %>% summarise(mean2020 = mean(i2020), mean2021 = mean(i2021))
cpi_indices
cpi_indices %>% filter(name2 %in% c("Food","Non-alcoholic beverages"))
cpi_indices %>% filter(name2 %in% c("Food","Non-alcoholic beverages")) %>% mutate(new_cat = "All foods")
cpi_indices %>% mutate(new_cat = NA)
cpi_indices %>% recode(name2, "Food" = "All Foods", "Non-alcoholic beverages")
cpi_indices %>% recode_factor(name2, "Food" = "All Foods", "Non-alcoholic beverages")
cpi_indices %>% recode(name2, "Food" = "All Foods", "Non-alcoholic beverages")
cpi_indices$name2
case_when(cpi_indices$name2 == "Food" ~ "All foods")
case_when(cpi_indices$name2 == "Food" ~ "All foods", cpi_indices$name2 == "Non-alcoholic beverages" ~ "All foods")
case_when(cpi_indices$name2 == "Food" ~ "All foods", cpi_indices$name2 == "Non-alcoholic beverages" ~ "All foods")
case_when(cpi_indices$name2 == "Food" ~ "All foods", cpi_indices$name2 == "Non-alcoholic beverages" ~ "All foods")
case_when(cpi_indices$name2 == "Food" ~ "All foods",
cpi_indices$name2 == "Non-alcoholic beverages" ~ "All foods",
cpi_indices$name2 == "Clothing" ~ "All garments",
cpi_indices$name2 == "Footwear including repairs"
)
case_when(cpi_indices$name2 == "Food" ~ "All foods",
cpi_indices$name2 == "Non-alcoholic beverages" ~ "All foods",
cpi_indices$name2 == "Clothing" ~ "All garments",
cpi_indices$name2 == "Footwear including repairs" ~ "All garments"
)
cpi_indices %>%
mutate(new_cat =
case_when(name2 == "Food" ~ "All foods",
name2 == "Non-alcoholic beverages" ~ "All foods",
name2 == "Clothing" ~ "All garments",
name2 == "Footwear including repairs" ~ "All garments"
)
)
test <- cpi_indices %>%
mutate(new_cat =
case_when(name2 == "Food" ~ "All foods",
name2 == "Non-alcoholic beverages" ~ "All foods",
name2 == "Clothing" ~ "All garments",
name2 == "Footwear including repairs" ~ "All garments"
)
)
head(test, 20)
cpi_indices <- cpi_indices %>%
mutate(new_cat =
case_when(name2 == "Food" ~ "All foods",
name2 == "Non-alcoholic beverages" ~ "All foods",
name2 == "Clothing" ~ "All garments",
name2 == "Footwear including repairs" ~ "All garments"
)
)
cpi_indices[10:30,]
cpi_indices[10:30,]
cpi_indices[10:20,]
cpi_indices[10:20,]
cpi_indices[10:20,c(1:3,17:19)]
cpi_indices[10:20,c(1:3,17:19)]
new_cats_means
new_cats_means <- new_cats %>%
select(new_cat, i2020, i2021) %>%
group_by(new_cat) %>%
summarise(mean2020 = mean(i2020), mean2021 = mean(i2021))
new_cats_means
cpi_indices %>% full_join(new_cats_means, by = "new_cat")
cpi_indices < cpi_indices %>% full_join(new_cats_means, by = "new_cat")
cpi_indices <- cpi_indices %>% full_join(new_cats_means, by = "new_cat")
cpi_indices
cpi_indices[10:20,c(1:3,17:20)]
cpi_indices[10:25,c(1:3,17:20)]
head(cpi_indices[c(1:3,17:20)],20)
source("~/.active-rstudio-document", echo=TRUE)
cpi_indices <- cpi_indices %>% full_join(new_cats_means, by = "new_cat")
head(cpi_indices[c(1:3,17:20)],20)
new_cats_means
cpi_indices
htmltools::img(src = knitr::image_uri("../Images/LATree.PNG"),
alt = 'logo',
style = 'position:absolute; top:0; right:0; padding:10px; width:200px;')
